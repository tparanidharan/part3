{"version":3,"sources":["components/PersonForm.js","components/DisplayContact.js","components/SearchNamePart.js","services/ServiceHandler.js","components/NotifyUser.js","App.js","index.js"],"names":["PersonForm","currName","currPhone","handlePersonChange","handlenumberChange","addPerson","onSubmit","value","onChange","type","pattern","DisplayContact","addresses","searchText","deleteHandler","console","log","length","filteredAddresses","filter","address","name","toLowerCase","includes","map","number","onClick","id","SearchNamePart","handleSearch","base_URL","axios","get","then","response","data","addPersonObj","post","delete","personObj","put","NotifyUser","message","notifType","className","App","useState","persons","setPersons","newName","setNewName","newPhoneno","setnewPhoneno","searchName","setSearchName","notifyUser","setNotifyUser","setNotifType","useEffect","ServiceHandler","contacts","event","target","validity","valid","preventDefault","person","newData","concat","catch","error","setTimeout","window","confirm","text","updatePerson","delData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ceaa9cc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({currName,currPhone,handlePersonChange,handlenumberChange,addPerson}) =>{\r\n\r\nreturn  <form onSubmit={addPerson}>\r\n    <div>\r\n      name: <input value={currName} onChange={handlePersonChange}/>\r\n    </div>\r\n    <div>\r\n      Phone#: <input type=\"text\" pattern=\"[\\d -]+\" value={currPhone} onChange={handlenumberChange}/>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add Person</button>\r\n    </div>\r\n  </form>\r\n\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from 'react'\r\n\r\nconst DisplayContact= ({addresses,searchText,deleteHandler}) =>{\r\n  //console.log(addresses, searchText)\r\n  console.log(\"crash\");\r\n  if(searchText.length > 0 && addresses.length > 0 ){\r\n  const filteredAddresses= addresses.filter((address)=> address.name.toLowerCase().includes(searchText.toLowerCase()))\r\n//  console.log(\"filteredAddresses \",searchText, \"pArani\".toLowerCase().includes(\"\".toLowerCase()),filteredAddresses)\r\nif(filteredAddresses.length > 0)\r\n  return <>   {filteredAddresses.map((address) =><p key={address.name}>{address.name} {address.number} <button onClick={()=> deleteHandler(address.id)}>Delete </button></p>) }</>\r\n  else {\r\n      return <><p>Sorry no match found!</p></>\r\n  }\r\n}\r\nelse if (addresses.length > 0 && searchText.length === 0 ){\r\n  return <>{addresses.map((address) =><p key={address.name}>{address.name} {address.number} <button onClick={()=> deleteHandler(address.id)}>Delete </button></p>) }</>\r\n}\r\nelse if (addresses.length === 0){\r\n\r\n  return <>Data Retrieving not complete or no contacts available</>\r\n}\r\nelse return <></>\r\n}\r\n\r\nexport default DisplayContact\r\n","import React from 'react'\r\n\r\nconst SearchNamePart = ({searchText,handleSearch}) =>\r\n  <div>\r\n    Search Name <input value={searchText} onChange={handleSearch}/>\r\n  </div>\r\n\r\nexport default SearchNamePart\r\n","import axios from 'axios'\r\n\r\nconst fetchInitialData = (base_URL) =>\r\n{\r\nconsole.log('fetching Initial data')\r\n  return axios.get(base_URL).then(response => response.data)\r\n}\r\n\r\nconst addNewContact = (base_URL,addPersonObj) =>\r\n{\r\n  return axios.post(base_URL,addPersonObj).then(response => response.data)\r\n}\r\n\r\nconst updateContact = (base_URL,personObj) =>\r\n{\r\n  console.log(personObj.id, base_URL);\r\n  return axios.put(`${base_URL}/${personObj.id}`,personObj).then(response => response.data)\r\n}\r\n\r\nconst deleteContact = (base_URL,id) =>\r\n{\r\n  return axios.delete(`${base_URL}/${id}`).then(response => response.data)\r\n}\r\n\r\nexport default {fetchInitialData,addNewContact,deleteContact, updateContact}\r\n","import React from 'react'\r\n\r\nconst NotifyUser = ({message, notifType}) => {\r\n  console.log(message, notifType);\r\n  return <div className={notifType}> {message} </div>\r\n}\r\nexport default NotifyUser\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport PersonForm from './components/PersonForm'\r\nimport DisplayContact from './components/DisplayContact'\r\nimport SearchNamePart from './components/SearchNamePart'\r\nimport ServiceHandler from './services/ServiceHandler'\r\nimport NotifyUser from './components/NotifyUser'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhoneno, setnewPhoneno ] = useState('')\r\n  const [ searchName, setSearchName] = useState('')\r\n  const [notifyUser, setNotifyUser] = useState('')\r\n  const [notifType, setNotifType] = useState('')\r\n  const base_URL= 'https://paranijs.herokuapp.com/api/persons'\r\n  useEffect(() => {\r\n     console.log('effect')\r\n    // console.log(\"inside effect\",ServiceHandler.fetchInitialData(base_URL))\r\n    ServiceHandler.fetchInitialData(base_URL).then(contacts => setPersons(contacts))\r\n       }\r\n   , [])\r\n\r\n  const addPerson = (event) => {\r\n      event.preventDefault()\r\n      if(newName.length >0 && newPhoneno.length>0)\r\n      {\r\n        if((persons.filter((person)=>{\r\n          return newName.toLowerCase() === person.name.toLowerCase()}\r\n        )).length === 0){\r\n        const addPersonObj = { name: newName,\r\n                              number: newPhoneno}\r\n\r\n        ServiceHandler.addNewContact(base_URL,addPersonObj).then(newData => setPersons(persons.concat(newData))).catch(error =>\r\n        {\r\n          setNotifType('error')\r\n          setNotifyUser(`${addPersonObj.name} could not be added successfully`)\r\n          setTimeout(() => {\r\n        setNotifType(null)\r\n         setNotifyUser(null)}, 5000)\r\n        })\r\n\r\n         setNotifType('success')\r\n         setNotifyUser(`${addPersonObj.name} added successfully`)\r\n         setTimeout(() => {\r\n       setNotifType(null)\r\n        setNotifyUser(null)\r\n    }, 5000)\r\n\r\n\r\n  //      setPersons(persons.concat(addPersonObj))\r\n\r\n        }\r\n        else\r\n\r\n          if((persons.filter((person)=>newPhoneno === person.number)).length === 0)\r\n            if( window.confirm(\"confirm update\",`${newName} is already there on the list, want to update with new phone no.`,[{text: 'Cancel'}])){\r\n            const updatePerson = persons.filter((person)=> newName.toLowerCase() === person.name.toLowerCase())[0]\r\n            ServiceHandler.updateContact(base_URL,{...updatePerson,number:newPhoneno})\r\n            .then(newData => {setPersons(persons.map(person => person.id === newData.id ? newData : person )\r\n            )\r\n            setNotifType('success')\r\n            setNotifyUser(`${updatePerson.name} updated successfully`)\r\n            setTimeout(() => {\r\n          setNotifType(null)\r\n           setNotifyUser(null)\r\n       }, 5000)}).catch(error =>\r\n            {\r\n              setNotifType('error')\r\n              setNotifyUser(`${updatePerson.name} could not be updated successfully`)\r\n              setTimeout(() => {\r\n            setNotifType(null)\r\n             setNotifyUser(null)}, 5000)\r\n            })\r\n\r\n          }\r\n        setNewName(\"\")\r\n        setnewPhoneno(\"\")\r\n      }\r\n      else if (newName.length === 0 && newPhoneno.length === 0)\r\n      {\r\n        setNotifType('error')\r\n        setNotifyUser(`Please fill Name and Phone number`)\r\n\r\n        setTimeout(() => {\r\n        setNotifType(null)\r\n        setNotifyUser(null)\r\n   }, 5000)\r\n      }\r\n      else if (newName.length === 0 && newPhoneno.length > 0)\r\n      {\r\n        setNotifType('error')\r\n        setNotifyUser(`Please fill Name`)\r\n\r\n        setTimeout(() => {\r\n        setNotifType(null)\r\n        setNotifyUser(null)\r\n   }, 5000)\r\n\r\n      }\r\n      else\r\n      {\r\n        setNotifType('error')\r\n        setNotifyUser(`Please fill Phone number`)\r\n\r\n        setTimeout(() => {\r\n        setNotifType(null)\r\n        setNotifyUser(null)\r\n   }, 5000)\r\n\r\n      }\r\n    }\r\n\r\n    const deleteHandler=(id)=>{\r\n      ServiceHandler.deleteContact(base_URL,id).then(delData => {\r\n          setPersons(persons.filter((person => person.id !== id)))\r\n          setSearchName('')\r\n          setNotifType('success')\r\n          setNotifyUser(`ID: ${id} deleted successfully`)\r\n          setTimeout(() => {\r\n        setNotifType(null)\r\n         setNotifyUser(null)\r\n     }, 5000)\r\n   }).catch(error => {\r\n     setNotifType('error')\r\n     setNotifyUser(`ID: ${id} could not be deleted`)\r\n     console.log(error);\r\n     setTimeout(() => {\r\n   setNotifType(null)\r\n    setNotifyUser(null)\r\n}, 5000)\r\n   })\r\n\r\n    }\r\n    const handleSearch = (event) => {\r\n      setSearchName(event.target.value);\r\n    }\r\n  const handlePersonChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n  const handlenumberChange = (event) => {\r\n    if(event.target.validity.valid)\r\n      setnewPhoneno(event.target.value);\r\n  }\r\n  return (\r\n   <div>\r\n     <h2>Phonebook</h2>\r\n     <NotifyUser message={notifyUser} notifType={notifType}/>\r\n     <h3>Add a new Contact</h3>\r\n     <PersonForm currPhone={newPhoneno} currName={newName} handlePersonChange={handlePersonChange} handlenumberChange={handlenumberChange} addPerson={addPerson} />\r\n     <h3>Search in Contacts</h3>\r\n     <SearchNamePart searchText={searchName} handleSearch={handleSearch} />\r\n     <h3>Contact Numbers</h3>\r\n     <DisplayContact addresses={persons} searchText={searchName} handleSearch={handleSearch} deleteHandler={deleteHandler} />\r\n   </div>\r\n )\r\n\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}